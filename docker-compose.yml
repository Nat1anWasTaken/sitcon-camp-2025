services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sitcon-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/sitcon.db
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
    volumes:
      - backend_data:/app/data
    networks:
      - sitcon-network
    depends_on:
      - minio
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sitcon-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    networks:
      - sitcon-network
    depends_on:
      - backend
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: sitcon-minio
    hostname: minio
    ports:
      - "9000:9000"  # API 端口
      - "9001:9001"  # 控制台端口
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    networks:
      - sitcon-network
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  # 後端資料持久化
  backend_data:
    driver: local
  
  # MinIO 資料持久化
  minio_data:
    driver: local

networks:
  sitcon-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16